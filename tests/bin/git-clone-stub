#!/usr/bin/env bash
# Simplified git clone stub for offline verification. Copy or symlink this file to a
# location earlier in PATH (e.g. /usr/local/bin/git) before running the installer in
# environments where outbound HTTPS is blocked.
set -euo pipefail

if [[ ${1:-} == clone ]]; then
  dest="${@: -1}"
  rm -rf "$dest"
  mkdir -p "$dest"
  case "$dest" in
    *PiFmRds*)
      mkdir -p "$dest/src"
      cat <<'MAKE' >"$dest/src/Makefile"
all:
	@echo "[stub make] building pi_fm_rds"
	@echo '#!/usr/bin/env bash' > pi_fm_rds
	@echo 'echo stub-pi_fm_rds exec' >> pi_fm_rds
	@chmod +x pi_fm_rds
clean:
	@rm -f pi_fm_rds
MAKE
      ;;
    *bluez-alsa*)
      cat <<'BOOT' >"$dest/bootstrap"
#!/usr/bin/env bash
exit 0
BOOT
      chmod +x "$dest/bootstrap"
      cat <<'CONF' >"$dest/configure"
#!/usr/bin/env bash
set -euo pipefail
prefix="/usr/local"
while [[ $# -gt 0 ]]; do
  case "$1" in
    --prefix=*) prefix="${1#*=}" ;;
    --disable-hcitop) ;;
  esac
  shift || true
done
cat >Makefile <<MAKE
PREFIX ?= ${prefix}
bindir = \$(PREFIX)/bin

all:
	@echo "[stub make] building bluealsa"

install:
	@mkdir -p \$(DESTDIR)\$(bindir)
	@echo '#!/usr/bin/env bash' > \$(DESTDIR)\$(bindir)/bluealsa
	@echo 'exit 0' >> \$(DESTDIR)\$(bindir)/bluealsa
	@chmod +x \$(DESTDIR)\$(bindir)/bluealsa
	@ln -sf bluealsa \$(DESTDIR)\$(bindir)/bluealsad

clean:
	@echo "[stub make] clean bluealsa"
MAKE
exit 0
CONF
      chmod +x "$dest/configure"
      ;;
  esac
  exit 0
fi

exec /usr/bin/git "$@"
